"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[976],{2053:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"intro","title":"Simple Card","description":"Create a reusable Card component for your Docusaurus site that can be customized with different parts, colors and sizes.","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/Simple-Card/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.md","tags":[],"version":"current","frontMatter":{"title":"Simple Card","description":"Create a reusable Card component for your Docusaurus site that can be customized with different parts, colors and sizes.","additionalContributors":[{"login":"Juniors017","html_url":"https://github.com/Juniors017","avatar_url":"https://avatars.githubusercontent.com/u/97809069?v=4"}]},"sidebar":"tutorialSidebar"}');var r=n(4848),o=n(8453);const s={title:"Simple Card",description:"Create a reusable Card component for your Docusaurus site that can be customized with different parts, colors and sizes.",additionalContributors:[{login:"Juniors017",html_url:"https://github.com/Juniors017",avatar_url:"https://avatars.githubusercontent.com/u/97809069?v=4"}]},i=void 0,c={},l=[{value:"SimpleCard : composition of the master folder",id:"simplecard--composition-of-the-master-folder",level:3},{value:"Creating the Card component",id:"creating-the-card-component",level:2},{value:"Creating the CardHeader component",id:"creating-the-cardheader-component",level:2},{value:"Creating the CardBody component",id:"creating-the-cardbody-component",level:2},{value:"Creating the CardImage component",id:"creating-the-cardimage-component",level:2},{value:"Creating the CardFooter component",id:"creating-the-cardfooter-component",level:2},{value:"MDX Component Scope",id:"mdx-component-scope",level:2},{value:"Using the Cards Component in an MDX File",id:"using-the-cards-component-in-an-mdx-file",level:2},{value:"Basic card",id:"basic-card",level:3},{value:"Feed card",id:"feed-card",level:3},{value:"Mega Feed card",id:"mega-feed-card",level:3},{value:"Photo card",id:"photo-card",level:3},{value:"Photo card Avatar",id:"photo-card-avatar",level:3},{value:"Other Post card",id:"other-post-card",level:3},{value:"Multi demo card",id:"multi-demo-card",level:3}];function d(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components},{Card:n,CardBody:a,CardFooter:s,CardHeader:i,CardImage:c,DocusaurusButton:l,TabItem:d,Tabs:m}=t;return n||h("Card",!0),a||h("CardBody",!0),s||h("CardFooter",!0),i||h("CardHeader",!0),c||h("CardImage",!0),l||h("DocusaurusButton",!0),d||h("TabItem",!0),m||h("Tabs",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)("div",{className:"avatar margin-bottom--lg",children:[(0,r.jsx)("img",{className:"avatar__photo avatar__photo--xs ",src:"https://avatars.githubusercontent.com/u/97809069?v=4"}),(0,r.jsx)("div",{className:"avatar__intro",children:(0,r.jsxs)("div",{className:"avatar__name",children:[(0,r.jsx)(t.a,{href:"https://github.com/Juniors017",children:"Docux (Juniors017)"})," "]})})]}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.a,{href:"https://infima.dev/",children:"Infima CSS framework"}),' provides a set of utility classNamees that can be used to stylize cards in Docusaurus.\nThis article will cover how to create a reusable cards component for your Docusaurus site which can be personalized with different colors and sizes.\nThe component will create all the cards available in Infima and "Custom" cards, you will be able to create and personalize each card independently of each other']}),"\n",(0,r.jsx)(t.p,{children:"The component is in fact a set of small components that will admit to form the cards."}),"\n",(0,r.jsx)(t.h3,{id:"simplecard--composition-of-the-master-folder",children:"SimpleCard : composition of the master folder"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Card component (The container of alls parts)"}),"\n",(0,r.jsx)(t.li,{children:"CardHeader component (Header parts of cards)"}),"\n",(0,r.jsx)(t.li,{children:"CardBody component (Body parts of cards)"}),"\n",(0,r.jsx)(t.li,{children:"CardFooter component (Footer parts of cards)"}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"We will discover that it pairs wonderfully with other components present in our library but this will be the subject of a dedicated page."}),"\n",(0,r.jsx)(t.h2,{id:"creating-the-card-component",children:"Creating the Card component"}),"\n",(0,r.jsx)(t.p,{children:"Think of this component as the container of all card parts"}),"\n",(0,r.jsxs)(t.p,{children:["First we will create the master folder in:  ",(0,r.jsx)(t.code,{children:"\\src\\components\\SimpleCard\\"}),". Next we will start by creating a new component called Card. It will be the container component of our different parts to come. Also this will give the possibility to manage className and style for each part."]}),"\n",(0,r.jsx)(t.p,{children:"The component will accept the following props:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"shadow"}),": if you want to show a shadow under the map."]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Creating the file and adding the source code for the component."}),"\n",(0,r.jsxs)(m,{groupId:"js-ts",children:[(0,r.jsx)(d,{value:"js",label:"JS",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",metastring:"title='\\src\\components\\SimpleCard\\Card\\index.js'",children:"import React,  { CSSProperties } from 'react'; // CSSProperties allows inline styling with better type checking.\nimport clsx from 'clsx'; // clsx helps manage conditional className names in a clean and concise manner.\n\n\n\nconst Card = ({\n  className, // classNamees for the container card\n  style, // Custom styles for the container card\n  children,  // for include others parts in\n  shadow,  // for add shadow under your card Shadow levels: low (lw), medium (md), top-level (tl)\n}) => {\n  const cardShadow = shadow ? `item shadow--${shadow}` :'';\n  return (\n    <div className=\"card-demo\">\n    <div className={clsx(\"card\", className, cardShadow)} style={style}>\n    {children}\n  </div></div>\n  );\n};\n\n\nexport default  Card;\n"})})}),(0,r.jsx)(d,{value:"ts",label:"TS",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",metastring:"title='\\src\\components\\SimpleCard\\Card\\index.tsx'",children:"import React, { CSSProperties, ReactNode } from 'react'; // Import types for props\nimport clsx from 'clsx'; // clsx helps manage conditional className names in a clean and concise manner.\n\n// Define an interface for the component props\ninterface CardProps {\n  className?: string; // Optional className names for the container card\n  style?: CSSProperties; // Optional custom styles for the container card\n  children: ReactNode; // Content to be included within the card\n  shadow?: 'lw' | 'md' | 'tl'; // Optional shadow levels: low (lw), medium (md), top-level (tl)\n}\n\n// Build the card component with the specified props\nconst Card: React.FC<CardProps> = ({\n  className, // classNamees for the container card\n  style, // Custom styles for the container card\n  children, // Content to be included within the card\n  shadow, // for add shadow under your card Shadow levels: low (lw), medium (md), top-level (tl)\n}) => {\n  const cardShadow = shadow ? `item shadow--${shadow}` : '';\n  return (\n    <div className=\"card-demo\">\n      <div className={clsx(\"card\", className, cardShadow)} style={style}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n"})})})]}),"\n",(0,r.jsx)(t.h2,{id:"creating-the-cardheader-component",children:"Creating the CardHeader component"}),"\n",(0,r.jsx)(t.p,{children:"Think of this component as the Header of your futurs cards. Creating the file and adding the source code for the component.The component will accept the following props:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"textAlign"}),": The option for text alignment ",(0,r.jsx)(t.code,{children:"left"})," ",(0,r.jsx)(t.code,{children:"right"})," ",(0,r.jsx)(t.code,{children:"center"})," ",(0,r.jsx)(t.code,{children:"justify"})]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"variant"}),": (optional)This will be used to apply different colors to the text based on the Infima CSS utility classNamees. The default value is primary."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"italic"}),": Default value is false, it's for italic text render"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"noDecoration"}),": Default value is false, it's for delete text decoration"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"transform"}),": The option for transform text to ",(0,r.jsx)(t.code,{children:"UPPERCASE TEXT"})," ",(0,r.jsx)(t.code,{children:"lowercase text"})," or ",(0,r.jsx)(t.code,{children:"Capitalize Text"})]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"breakWord"}),": The option for break text, the text will break at the a word boundary so it will not break in the middle of a word."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"truncate"}),": The option is for very long text that will be truncated if there is not enough space to display it in a single line on the screen. It's truncated by adding..."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"weight"}),": The option for text weight ",(0,r.jsx)(t.code,{children:"Bold"})," ",(0,r.jsx)(t.code,{children:"Semibold"})," ",(0,r.jsx)(t.code,{children:"Normal"})," ",(0,r.jsx)(t.code,{children:"Light"})]}),"\n"]}),"\n",(0,r.jsxs)(m,{groupId:"js-ts",children:[(0,r.jsx)(d,{value:"js",label:"JS",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",metastring:"title='\\src\\components\\SimpleCard\\CardHeader\\index.js'",children:"import React,  { CSSProperties } from 'react'; // CSSProperties allows inline styling with better type checking.\nimport clsx from 'clsx'; // clsx helps manage conditional className names in a clean and concise manner.\n\n\nconst CardHeader = ({\n  className, // classNamees for the container card\n  style, // Custom styles for the container card\n  children, // Content to be included within the card\n  textAlign, \n  variant, \n  italic = false , \n  noDecoration = false, \n  transform, \n  breakWord = false, \n  truncate = false, \n  weight,\n}) => {   \n  const text = textAlign ? `text--${textAlign}` :'';\n  const textColor = variant ? `text--${variant}` : '';\n  const textItalic = italic ? 'text--italic' : '';\n  const textDecoration = noDecoration ? 'text-no-decoration' : '';\n  const textType = transform ? `text--${transform}` : '';\n  const textBreak = breakWord ? 'text--break' : '';\n  const textTruncate = truncate ? 'text--truncate' : '';\n  const textWeight = weight ? `text--${weight}` : '';\n  return (\n    <div className={clsx(\n        'card__header',\n        className,\n        text,\n        textType,\n        textColor,\n        textItalic,\n        textDecoration,\n        textBreak,\n        textTruncate,\n        textWeight\n        )} \n        style={style} >\n    \n    {children}\n  </div>\n  );\n}\n\n\nexport default CardHeader ;\n\n"})})}),(0,r.jsx)(d,{value:"ts",label:"TS",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",metastring:"title='\\src\\components\\SimpleCard\\CardHeader\\index.tsx'",children:"import React, { CSSProperties, ReactNode } from 'react';\nimport clsx from 'clsx';\n\ninterface CardHeaderProps {\n  className?: string;\n  style?: CSSProperties;\n  children: ReactNode;\n  textAlign?: string;\n  variant?: string;\n  italic?: boolean;\n  noDecoration?: boolean;\n  transform?: string;\n  breakWord?: boolean;\n  truncate?: boolean;\n  weight?: string;\n}\n\nconst CardHeader: React.FC<CardHeaderProps> = ({\n  className,\n  style,\n  children,\n  textAlign,\n  variant,\n  italic = false,\n  noDecoration = false,\n  transform,\n  breakWord = false,\n  truncate = false,\n  weight,\n}) => {\n  const text = textAlign ? `text--${textAlign}` : '';\n  const textColor = variant ? `text--${variant}` : '';\n  const textItalic = italic ? 'text--italic' : '';\n  const textDecoration = noDecoration ? 'text-no-decoration' : '';\n  const textType = transform ? `text--${transform}` : '';\n  const textBreak = breakWord ? 'text--break' : '';\n  const textTruncate = truncate ? 'text--truncate' : '';\n  const textWeight = weight ? `text--${weight}` : '';\n\n  return (\n    <div\n      className={clsx(\n        'card__header',\n        className,\n        text,\n        textType,\n        textColor,\n        textItalic,\n        textDecoration,\n        textBreak,\n        textTruncate,\n        textWeight\n      )}\n      style={style}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default CardHeader;\n\n\n"})})})]}),"\n",(0,r.jsx)(t.h2,{id:"creating-the-cardbody-component",children:"Creating the CardBody component"}),"\n",(0,r.jsx)(t.p,{children:"Think of this component as the body of your futurs cards. Creating the file and adding the source code for the component.The component will accept the following props:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"textAlign"}),": The option for text alignment ",(0,r.jsx)(t.code,{children:"left"})," ",(0,r.jsx)(t.code,{children:"right"})," ",(0,r.jsx)(t.code,{children:"center"})," ",(0,r.jsx)(t.code,{children:"justify"})]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"variant"}),": (optional)This will be used to apply different colors to the text based on the Infima CSS utility classNamees. The default value is primary."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"italic"}),": Default value is false, it's for italic text render"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"noDecoration"}),": Default value is false, it's for delete text decoration"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"transform"}),": The option for transform text to ",(0,r.jsx)(t.code,{children:"UPPERCASE TEXT"})," ",(0,r.jsx)(t.code,{children:"lowercase text"})," or ",(0,r.jsx)(t.code,{children:"Capitalize Text"})]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"breakWord"}),": The option for break text, the text will break at the a word boundary so it will not break in the middle of a word."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"truncate"}),": The option is for very long text that will be truncated if there is not enough space to display it in a single line on the screen. It's truncated by adding..."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"weight"}),": The option for text weight ",(0,r.jsx)(t.code,{children:"Bold"})," ",(0,r.jsx)(t.code,{children:"Semibold"})," ",(0,r.jsx)(t.code,{children:"Normal"})," ",(0,r.jsx)(t.code,{children:"Light"})]}),"\n"]}),"\n",(0,r.jsxs)(m,{groupId:"js-ts",children:[(0,r.jsx)(d,{value:"js",label:"JS",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",metastring:"title='\\src\\components\\SimpleCard\\CardBody\\index.js'",children:"import React,  { CSSProperties } from 'react';\nimport clsx from 'clsx'; \n\n\n\nconst CardBody = ({\n  className, // classNamees for the container card\n  style, // Custom styles for the container card\n  children, // Content to be included within the card \n  textAlign, \n  variant,\n  italic = false , \n  noDecoration = false, \n  transform, \n  breakWord = false, \n  truncate = false, \n  weight,\n}) => {   \n  const text = textAlign ? `text--${textAlign}` :'';\n  const textColor = variant ? `text--${variant}` : '';\n  const textItalic = italic ? 'text--italic' : '';\n  const textDecoration = noDecoration ? 'text-no-decoration' : '';\n  const textType = transform ? `text--${transform}` : '';\n  const textBreak = breakWord ? 'text--break' : '';\n  const textTruncate = truncate ? 'text--truncate' : '';\n  const textWeight = weight ? `text--${weight}` : '';\n  return (\n    <div className={clsx('card__body' , className, text, textType, textColor, textItalic, textDecoration, textBreak, textTruncate, textWeight)} style={style} >\n    {children}\n  </div>\n  );\n}\n\n\nexport default CardBody ;\n\n\n"})})}),(0,r.jsx)(d,{value:"ts",label:"TS",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",metastring:"title='\\src\\components\\SimpleCard\\CardBody\\index.tsx'",children:"import React, { CSSProperties, ReactNode } from 'react';\nimport clsx from 'clsx';\n\ninterface CardBodyProps {\n  className?: string;\n  style?: CSSProperties;\n  children: ReactNode;\n  textAlign?: string;\n  variant?: string;\n  italic?: boolean;\n  noDecoration?: boolean;\n  transform?: string;\n  breakWord?: boolean;\n  truncate?: boolean;\n  weight?: string;\n}\n\nconst CardBody: React.FC<CardBodyProps> = ({\n  className,\n  style,\n  children,\n  textAlign,\n  variant,\n  italic = false,\n  noDecoration = false,\n  transform,\n  breakWord = false,\n  truncate = false,\n  weight,\n}) => {\n  const text = textAlign ? `text--${textAlign}` : '';\n  const textColor = variant ? `text--${variant}` : '';\n  const textItalic = italic ? 'text--italic' : '';\n  const textDecoration = noDecoration ? 'text-no-decoration' : '';\n  const textType = transform ? `text--${transform}` : '';\n  const textBreak = breakWord ? 'text--break' : '';\n  const textTruncate = truncate ? 'text--truncate' : '';\n  const textWeight = weight ? `text--${weight}` : '';\n\n  return (\n    <div\n      className={clsx(\n        'card__body',\n        className,\n        text,\n        textType,\n        textColor,\n        textItalic,\n        textDecoration,\n        textBreak,\n        textTruncate,\n        textWeight\n      )}\n      style={style}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default CardBody;\n\n\n\n"})})})]}),"\n",(0,r.jsx)(t.h2,{id:"creating-the-cardimage-component",children:"Creating the CardImage component"}),"\n",(0,r.jsxs)(t.p,{children:["Think of this component as the image cover of your futurs cards. Creating the file and adding the source code for the component.\nThis component is optionnal, you can use image html and add ",(0,r.jsx)(t.code,{children:'className={clsx("card__image")}'})]}),"\n",(0,r.jsxs)(m,{groupId:"js-ts",children:[(0,r.jsx)(d,{value:"js",label:"JS",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",metastring:"title='\\src\\components\\SimpleCard\\CardImage\\index.js'",children:"import React,  { CSSProperties } from 'react';\nimport clsx from 'clsx'; \nimport useBaseUrl from '@docusaurus/useBaseUrl'; // Import the useBaseUrl function from Docusaurus\n\n\nconst CardImage = ({\n  className, \n  style,\n  cardImageUrl,\n  alt,\n  title,\n}) => {   \n\n  const generatedCardImageUrl = useBaseUrl(cardImageUrl);\n \n  \n  return (\n   \n    <img\n      className={clsx(\"card__image\", className)} style={style}\n      src={generatedCardImageUrl} alt={alt} title={title}/>\n\n  );\n}\n\n\nexport default CardImage ;\n\n\n\n"})})}),(0,r.jsx)(d,{value:"ts",label:"TS",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",metastring:"title='\\src\\components\\SimpleCard\\CardImage\\index.tsx'",children:"import React, { CSSProperties } from 'react';\nimport clsx from 'clsx';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\n\ninterface CardImageProps {\n  className?: string;\n  style?: CSSProperties;\n  cardImageUrl: string;\n  alt: string;\n  title: string;\n}\n\nconst CardImage: React.FC<CardImageProps> = ({\n  className,\n  style,\n  cardImageUrl,\n  alt,\n  title,\n}) => {\n  const generatedCardImageUrl = useBaseUrl(cardImageUrl);\n\n  return (\n      <img\n      className={clsx(\"card__image\", className)} style={style}\n      src={generatedCardImageUrl} alt={alt} title={title}/>\n  );\n};\n\nexport default CardImage;\n\n\n"})})})]}),"\n",(0,r.jsx)(t.h2,{id:"creating-the-cardfooter-component",children:"Creating the CardFooter component"}),"\n",(0,r.jsx)(t.p,{children:"Think of this component as the Footer of your futurs cards. Creating the file and adding the source code for the component.The component will accept the following props:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"textAlign"}),": The option for text alignment ",(0,r.jsx)(t.code,{children:"left"})," ",(0,r.jsx)(t.code,{children:"right"})," ",(0,r.jsx)(t.code,{children:"center"})," ",(0,r.jsx)(t.code,{children:"justify"})]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"variant"}),": (optional)This will be used to apply different colors to the text based on the Infima CSS utility classNamees. The default value is primary."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"italic"}),": Default value is false, it's for italic text render"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"noDecoration"}),": Default value is false, it's for delete text decoration"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"transform"}),": The option for transform text to ",(0,r.jsx)(t.code,{children:"UPPERCASE TEXT"})," ",(0,r.jsx)(t.code,{children:"lowercase text"})," or ",(0,r.jsx)(t.code,{children:"Capitalize Text"})]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"breakWord"}),": The option for break text, the text will break at the a word boundary so it will not break in the middle of a word."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"truncate"}),": The option is for very long text that will be truncated if there is not enough space to display it in a single line on the screen. It's truncated by adding..."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"weight"}),": The option for text weight ",(0,r.jsx)(t.code,{children:"Bold"})," ",(0,r.jsx)(t.code,{children:"Semibold"})," ",(0,r.jsx)(t.code,{children:"Normal"})," ",(0,r.jsx)(t.code,{children:"Light"})]}),"\n"]}),"\n",(0,r.jsxs)(m,{groupId:"js-ts",children:[(0,r.jsx)(d,{value:"js",label:"JS",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",metastring:"title='\\src\\components\\SimpleCard\\CardFooter\\index.js'",children:"import React,  { CSSProperties } from 'react';\nimport clsx from 'clsx'; \n\nconst CardFooter = ({\n  className, \n  style, \n  children, \n  textAlign, \n  variant,\n  italic = false , \n  noDecoration = false, \n  transform, \n  breakWord = false, \n  truncate = false, \n  weight,\n}) => {   \n  const text = textAlign ? `text--${textAlign}` :'';\n  const textColor = variant ? `text--${variant}` : '';\n  const textItalic = italic ? 'text--italic' : '';\n  const textDecoration = noDecoration ? 'text-no-decoration' : '';\n  const textType = transform ? `text--${transform}` : '';\n  const textBreak = breakWord ? 'text--break' : '';\n  const textTruncate = truncate ? 'text--truncate' : '';\n  const textWeight = weight ? `text--${weight}` : '';\n  return (\n    <div className={clsx(\n        'card__footer',\n        className,\n        text,\n        textType,\n        textColor,\n        textItalic,\n        textDecoration,\n        textBreak,\n        textTruncate,\n        textWeight\n        )}\n        style={style} >\n    {children}\n  </div>\n  );\n}\n\n\nexport default CardFooter ;\n\n\n"})})}),(0,r.jsx)(d,{value:"ts",label:"TS",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",metastring:"title='\\src\\components\\SimpleCard\\CardFooter\\index.tsx'",children:"import React, { CSSProperties, ReactNode } from 'react';\nimport clsx from 'clsx';\n\ninterface CardFooterProps {\n  className?: string;\n  style?: CSSProperties;\n  children: ReactNode;\n  textAlign?: string;\n  variant?: string;\n  italic?: boolean;\n  noDecoration?: boolean;\n  transform?: string;\n  breakWord?: boolean;\n  truncate?: boolean;\n  weight?: string;\n}\n\nconst CardFooter: React.FC<CardFooterProps> = ({\n  className,\n  style,\n  children,\n  textAlign,\n  variant,\n  italic = false,\n  noDecoration = false,\n  transform,\n  breakWord = false,\n  truncate = false,\n  weight,\n}) => {\n  const text = textAlign ? `text--${textAlign}` : '';\n  const textColor = variant ? `text--${variant}` : '';\n  const textItalic = italic ? 'text--italic' : '';\n  const textDecoration = noDecoration ? 'text-no-decoration' : '';\n  const textType = transform ? `text--${transform}` : '';\n  const textBreak = breakWord ? 'text--break' : '';\n  const textTruncate = truncate ? 'text--truncate' : '';\n  const textWeight = weight ? `text--${weight}` : '';\n\n  return (\n    <div\n      className={clsx(\n        'card__footer',\n        className,\n        text,\n        textType,\n        textColor,\n        textItalic,\n        textDecoration,\n        textBreak,\n        textTruncate,\n        textWeight\n      )}\n      style={style}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default CardFooter;\n\n\n\n\n"})})})]}),"\n",(0,r.jsx)(t.h2,{id:"mdx-component-scope",children:"MDX Component Scope"}),"\n",(0,r.jsxs)(t.p,{children:["To follow the Docusaurus documentation, we create a theme folder that will host the ",(0,r.jsx)(t.code,{children:"MDXComponents"})," file. This gives us ",(0,r.jsx)(t.code,{children:"src\\theme\\MDXComponents.*"}),". You may already have a ",(0,r.jsx)(t.code,{children:"src\\theme"})," folder or an ",(0,r.jsx)(t.code,{children:"MDXComponents"})," file if so - merge the changes described here with yours."]}),"\n",(0,r.jsx)(l,{to:"https://docusaurus.io/docs/markdown-features/react#mdx-component-scope",label:"Docusaurus Documentation: MDX Component Scope"}),"\n",(0,r.jsxs)(m,{groupId:"js-ts",children:[(0,r.jsx)(d,{value:"js",label:"JS",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",metastring:'title="src\\theme\\MDXComponents.js"',children:"  import React from 'react';\n  // Importing the original mapper + our components according to the Docusaurus doc\n  import MDXComponents from '@theme-original/MDXComponents';\n  import Card from '@site/src/components/SimpleCard/Card';\n  import CardBody from '@site/src/components/SimpleCard/CardBody';\n  import CardFooter from '@site/src/components/SimpleCard/CardFooter';\n  import CardHeader from '@site/src/components/SimpleCard/CardHeader';\n  import CardImage from '@site/src/components/SimpleCard/CardImage';\n    \n\n  export default {\n    // Reusing the default mapping\n    ...MDXComponents,\n    Card, \n    CardHeader, \n    CardBody, \n    CardFooter, \n    CardImage,\n  };\n"})})}),(0,r.jsx)(d,{value:"ts",label:"TS",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",metastring:'title="src\\theme\\MDXComponents.tsx"',children:"\n\n  import React from 'react';\n  // Importing the original mapper + our components according to the Docusaurus doc\n  import MDXComponents from '@theme-original/MDXComponents';\n  import Card from '@site/src/components/SimpleCard/Card';\n  import CardBody from '@site/src/components/SimpleCard/CardBody';\n  import CardFooter from '@site/src/components/SimpleCard/CardFooter';\n  import CardHeader from '@site/src/components/SimpleCard/CardHeader';\n  import CardImage from '@site/src/components/SimpleCard/CardImage';\n\n\n  export default {\n    // Reusing the default mapping\n    ...MDXComponents,\n    Card, \n    CardHeader, \n    CardBody, \n    CardFooter,\n    CardImage, \n  };\n"})})})]}),"\n",(0,r.jsx)(t.h2,{id:"using-the-cards-component-in-an-mdx-file",children:"Using the Cards Component in an MDX File"}),"\n",(0,r.jsx)(t.h3,{id:"basic-card",children:"Basic card"}),"\n",(0,r.jsx)("div",{className:"container ",children:(0,r.jsxs)("div",{className:"row ",children:[(0,r.jsx)("div",{className:"col col--6",children:(0,r.jsx)("div",{className:"",children:(0,r.jsxs)(n,{shadow:"tl",children:[(0,r.jsx)(i,{children:(0,r.jsx)("h3",{children:"Lorem Ipsum"})}),(0,r.jsx)(a,{children:(0,r.jsx)(t.p,{children:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\ntempor incididunt ut labore et dolore magna aliqua. Quis ipsum\nsuspendisse ultrices gravida."})}),(0,r.jsx)(s,{children:(0,r.jsx)("button",{className:"button button--secondary button--block",children:"See All"})})]})})}),(0,r.jsx)("div",{className:"col col--6",children:(0,r.jsx)("div",{className:"",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-html",children:"<Card shadow='tl' >\n  <CardHeader >\n    <h3>Lorem Ipsum</h3>\n  </CardHeader>\n\n<CardBody> \nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\ntempor incididunt ut labore et dolore magna aliqua. Quis ipsum\nsuspendisse ultrices gravida.\n</CardBody> \n\n\n<CardFooter>\n\n  <button className=\"button button--secondary button--block\">See All</button> \n\n</CardFooter> \n\n</Card>\n"})})})}),(0,r.jsx)(t.h3,{id:"feed-card",children:"Feed card"}),(0,r.jsx)("div",{className:"container ",children:(0,r.jsxs)("div",{className:"row padding-bottom--xl",children:[(0,r.jsx)("div",{className:"col col--6",children:(0,r.jsx)("div",{className:"",children:(0,r.jsxs)(n,{children:[(0,r.jsx)(i,{style:{backgroundColor:"#205d3b",color:"black"},children:(0,r.jsxs)("div",{className:"avatar avatar--vertical",children:[(0,r.jsx)("img",{className:"avatar__photo avatar__photo--xl",src:"https://avatars.githubusercontent.com/u/97809069?v=4"}),(0,r.jsxs)("div",{className:"avatar__intro",children:[(0,r.jsx)("div",{className:"avatar__name",children:"Docux (@Juniors017)"}),(0,r.jsx)("small",{className:"avatar__subtitle",children:(0,r.jsxs)(t.p,{children:["humble contributor on:\n",(0,r.jsx)("a",{style:{color:"white"},href:"https://docusaurus.community/",children:"@Doc.Community"})]})})]})]})}),(0,r.jsxs)(a,{style:{backgroundColor:"black",color:"silver"},className:"padding-vert--md",textAlign:"center",Transform:"uppercase",children:[(0,r.jsx)("h3",{children:"Docux Card component"}),(0,r.jsx)(t.p,{children:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\ntempor incididunt ut labore et dolore magna aliqua. Quis ipsum\nsuspendisse ultrices gravida."})]}),(0,r.jsx)(s,{style:{backgroundColor:"#205d3b",color:"black"},className:"text--center",children:(0,r.jsxs)("div",{className:"button-group button-group--block",children:[(0,r.jsx)("button",{className:"button button--secondary",children:"Like"}),(0,r.jsx)("button",{className:"button button--secondary",children:"Comment"}),(0,r.jsx)("button",{className:"button button--secondary",children:"Share"})]})})]})})}),(0,r.jsx)("div",{className:"col col--6",children:(0,r.jsx)("div",{className:"",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-html",children:'<Card>\n<CardHeader style={{ backgroundColor: \'#205d3b\' , color:\'black\'}}>\n<div className="avatar avatar--vertical">\n<img\n  className="avatar__photo avatar__photo--xl"\n  src="https://avatars.githubusercontent.com/u/97809069?v=4" />\n<div className="avatar__intro">\n  <div className="avatar__name">Docux (@Juniors017)</div>\n  <small className="avatar__subtitle">\n    humble contributor on:\n    <a style={{ color:\'white\'}}  href="https://docusaurus.community/">@Doc.Community</a>\n  </small>\n</div>\n</div>\n</CardHeader>\n<CardBody style={{ backgroundColor: \'black\' , color:\'silver\'}} className="padding-vert--md" textAlign=\'center\' Transform= \'uppercase\'> \n<h3>Docux Card component</h3>\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\ntempor incididunt ut labore et dolore magna aliqua. Quis ipsum\nsuspendisse ultrices gravida.\n</CardBody> \n\n\n<CardFooter style={{ backgroundColor: \'#205d3b\' , color:\'black\'}} className=\'text--center\'> \n<div className="button-group button-group--block">\n      <button className="button button--secondary">Like</button>\n      <button className="button button--secondary">Comment</button>\n      <button className="button button--secondary">Share</button>\n    </div>\n</CardFooter> \n\n</Card>\n'})})})})]})}),(0,r.jsx)(t.h3,{id:"mega-feed-card",children:"Mega Feed card"}),(0,r.jsx)("div",{className:"container",children:(0,r.jsxs)("div",{className:"row padding-bottom--xl",children:[(0,r.jsx)("div",{className:"col col--6",children:(0,r.jsx)("div",{className:"",children:(0,r.jsxs)(n,{children:[(0,r.jsx)(i,{className:"padding-top--lg",style:{backgroundColor:"rgb(33 126 209)",color:"black"},children:(0,r.jsxs)("div",{className:"avatar avatar--vertical",children:[(0,r.jsx)("img",{className:"avatar__photo avatar__photo--xl",src:"https://avatars.githubusercontent.com/u/97809069?v=4"}),(0,r.jsxs)("div",{className:"avatar__intro",children:[(0,r.jsx)("div",{className:"avatar__name",children:"Docux (@Juniors017)"}),(0,r.jsx)("small",{className:"avatar__subtitle",children:(0,r.jsxs)(t.p,{children:["humble contributor on:\n",(0,r.jsx)("a",{style:{color:"white"},href:"https://docusaurus.community/",children:"@Doc.Community"})]})})]})]})}),(0,r.jsx)(c,{style:{backgroundColor:"rgb(33 126 209)",color:"black"},cardImageUrl:"https://img.freepik.com/vecteurs-libre/dino-mignon-jouant-illustration-icone-vecteur-dessin-anime-planche-roulettes-concept-icone-sport-animal-isole_138676-7099.jpg?size=626&ext=jpg&ga=GA1.1.1416347011.1716591654&semt=sph"}),(0,r.jsxs)(a,{style:{backgroundColor:"white",color:"#8f600b"},className:"padding-vert--md",textAlign:"center",Transform:"uppercase",children:[(0,r.jsx)("h3",{children:"Docux Card component"}),(0,r.jsx)(t.p,{children:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\ntempor incididunt ut labore et dolore magna aliqua. Quis ipsum\nsuspendisse ultrices gravida."})]}),(0,r.jsx)(s,{style:{backgroundColor:"#2887bf",color:"black"},className:"text--center",children:(0,r.jsxs)("div",{className:"button-group button-group--block",children:[(0,r.jsx)("button",{className:"button button--secondary",children:"Like"}),(0,r.jsx)("button",{className:"button button--secondary",children:"Comment"}),(0,r.jsx)("button",{className:"button button--secondary",children:"Share"})]})})]})})}),(0,r.jsx)("div",{className:"col col--6",children:(0,r.jsx)("div",{className:"",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-html",children:"<Card>\n<CardHeader className='padding-top--lg' style={{ backgroundColor: 'rgb(33 126 209)' , color:'black'}}>\n<div className=\"avatar avatar--vertical\">\n<img\n  className=\"avatar__photo avatar__photo--xl\" \n  src=\"https://avatars.githubusercontent.com/u/97809069?v=4\" />\n<div className=\"avatar__intro\">\n  <div className=\"avatar__name\">Docux (@Juniors017)</div>\n  <small className=\"avatar__subtitle\">\n    humble contributor on:\n    <a style={{ color:'white'}} href=\"https://docusaurus.community/\">@Doc.Community</a>\n  </small>\n</div>\n</div>\n</CardHeader>\n\n<CardImage style={{ backgroundColor: 'rgb(33 126 209)' , color:'black'}} cardImageUrl=\"https://img.freepik.com/vecteurs-libre/dino-mignon-jouant-illustration-icone-vecteur-dessin-anime-planche-roulettes-concept-icone-sport-animal-isole_138676-7099.jpg?size=626&ext=jpg&ga=GA1.1.1416347011.1716591654&semt=sph\" />\n\n<CardBody style={{ backgroundColor: 'white' , color:'#8f600b'}} className=\"padding-vert--md\" textAlign='center' Transform= 'uppercase'> \n<h3>Docux Card component</h3>\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\ntempor incididunt ut labore et dolore magna aliqua. Quis ipsum\nsuspendisse ultrices gravida.\n</CardBody>  \n\n\n\n<CardFooter style={{ backgroundColor: '#2887bf' , color:'black'}} className='text--center'> \n<div className=\"button-group button-group--block\">\n      <button className=\"button button--secondary\">Like</button>\n      <button className=\"button button--secondary\">Comment</button>\n      <button className=\"button button--secondary\">Share</button>\n    </div>\n</CardFooter> \n\n</Card>\n\n"})})})})]})}),(0,r.jsx)(t.h3,{id:"photo-card",children:"Photo card"}),(0,r.jsx)("div",{className:"container",children:(0,r.jsxs)("div",{className:"row padding-bottom--xl",children:[(0,r.jsx)("div",{className:"col col--6",children:(0,r.jsx)("div",{className:"",children:(0,r.jsxs)(n,{children:[(0,r.jsx)(c,{cardImageUrl:"https://img.freepik.com/vecteurs-libre/dino-triceratops-mignon-illustration-icone-vecteur-dessin-anime-camera-technologie-animale-isolee-plat_138676-6762.jpg?size=626&ext=jpg&ga=GA1.1.1416347011.1716591654&semt=sph"}),(0,r.jsx)(s,{style:{backgroundColor:"#e37c77",color:"black"},className:"text--center",children:(0,r.jsxs)("div",{className:"button-group button-group--block",children:[(0,r.jsx)("button",{className:"button button--success",children:"Like"}),(0,r.jsx)("button",{className:"button button--warning",children:"Comment"}),(0,r.jsx)("button",{className:"button button--danger",children:"Share"})]})})]})})}),(0,r.jsx)("div",{className:"col col--6",children:(0,r.jsx)("div",{className:"",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-html",children:'  <Card>\n\n<CardImage cardImageUrl="https://img.freepik.com/vecteurs-libre/dino-triceratops-mignon-illustration-icone-vecteur-dessin-anime-camera-technologie-animale-isolee-plat_138676-6762.jpg?size=626&ext=jpg&ga=GA1.1.1416347011.1716591654&semt=sph" />\n\n<CardFooter style={{ backgroundColor: \'#e37c77\' , color:\'black\'}} className=\'text--center\'> \n<div className="button-group button-group--block">\n      <button className="button button--success">Like</button>\n      <button className="button button--warning">Comment</button>\n      <button className="button button--danger">Share</button>\n    </div>\n</CardFooter> \n\n</Card>\n'})})})})]})}),(0,r.jsx)(t.h3,{id:"photo-card-avatar",children:"Photo card Avatar"}),(0,r.jsx)("div",{className:"container",children:(0,r.jsxs)("div",{className:"row padding-bottom--xl",children:[(0,r.jsx)("div",{className:"col col--6",children:(0,r.jsx)("div",{className:"",children:(0,r.jsxs)(n,{children:[(0,r.jsx)(c,{cardImageUrl:"https://img.freepik.com/vecteurs-libre/dinosaure-mignon-qui-s-etend-icone-vecteur-dessin-anime-illustration-concept-icone-sport-animal-isole-plat_138676-9213.jpg?size=626&ext=jpg&ga=GA1.1.1416347011.1716591654&semt=sph"}),(0,r.jsx)(s,{style:{backgroundColor:"white",color:"black"},className:"text--center",children:(0,r.jsxs)("div",{className:"avatar",children:[(0,r.jsx)("img",{className:"avatar__photo avatar__photo--xs",src:"https://avatars.githubusercontent.com/u/97809069?v=4"}),(0,r.jsx)("div",{className:"avatar__intro",children:(0,r.jsx)("div",{className:"avatar__name",children:"Docux humble contributor"})})]})})]})})}),(0,r.jsx)("div",{className:"col col--6",children:(0,r.jsx)("div",{className:"",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-html",children:'   <Card>\n\n<CardImage cardImageUrl="https://img.freepik.com/vecteurs-libre/dinosaure-mignon-qui-s-etend-icone-vecteur-dessin-anime-illustration-concept-icone-sport-animal-isole-plat_138676-9213.jpg?size=626&ext=jpg&ga=GA1.1.1416347011.1716591654&semt=sph" />\n\n<CardFooter style={{ backgroundColor: \'white\' , color:\'black\'}} className=\'text--center\'> \n<div className="avatar">\n<img\n  className="avatar__photo avatar__photo--xs" \n  src="https://avatars.githubusercontent.com/u/97809069?v=4" />\n<div className="avatar__intro">\n  <div className="avatar__name">Docux humble contributor</div>\n  \n</div>\n</div>\n\n</CardFooter> \n\n</Card>\n\n\n'})})})})]})}),(0,r.jsx)(t.h3,{id:"other-post-card",children:"Other Post card"}),(0,r.jsx)("div",{className:"container",children:(0,r.jsxs)("div",{className:"row ",children:[(0,r.jsx)("div",{className:"col col--4",children:(0,r.jsx)("div",{className:"",children:(0,r.jsxs)(n,{shadow:"tl",children:[(0,r.jsx)(a,{style:{backgroundColor:"white",color:"black"},className:"padding-vert--md ",Transform:"uppercase",children:(0,r.jsx)(t.p,{children:"The Infima CSS  framework provides a set of utility classNamees that can be used to style card in Docusaurus. This article will cover how to create a reusable card component for your Docusaurus site that can be customized with different colors and sizes."})}),(0,r.jsx)(s,{style:{backgroundColor:"red",color:"black"},children:(0,r.jsxs)("div",{className:"avatar padding-top--md",children:[(0,r.jsx)("img",{className:"avatar__photo",src:"https://avatars.githubusercontent.com/u/97809069?v=4"}),(0,r.jsxs)("div",{className:"avatar__intro",children:[(0,r.jsx)("div",{className:"avatar__name",children:"Docux (@Juniors017)"}),(0,r.jsx)("small",{className:"avatar__subtitle",children:(0,r.jsx)(t.p,{children:"humble contributor"})})]})]})})]})})}),(0,r.jsx)("div",{className:"col col--8",children:(0,r.jsx)("div",{className:"",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-html",children:'  <Card shadow=\'tl\'>\n  <CardBody style={{ backgroundColor: \'white\' , color:\'black\'}} className="padding-vert--md "Transform= \'uppercase\'> \nThe Infima CSS  framework provides a set of utility classNamees that can be used to style card in Docusaurus. This article will cover how to create a reusable card component for your Docusaurus site that can be customized with different colors and sizes.\n </CardBody> \n  <CardFooter style={{ backgroundColor: \'red\' , color:\'black\'}} > \n\n<div className="avatar padding-top--md">\n        <img\n          className="avatar__photo"\n          src="https://avatars.githubusercontent.com/u/97809069?v=4" />\n        <div className="avatar__intro">\n          <div className="avatar__name">Docux (@Juniors017)</div>\n          <small className="avatar__subtitle">\n          humble contributor\n          </small>\n        </div>\n</div>\n  </CardFooter> \n  </Card>\n'})})})})]})})]})}),"\n",(0,r.jsx)(t.h3,{id:"multi-demo-card",children:"Multi demo card"}),"\n",(0,r.jsx)("div",{className:"container",children:(0,r.jsxs)("div",{className:"row padding-bottom--xl",children:[(0,r.jsx)("div",{className:"col col--4",children:(0,r.jsx)("div",{className:"",children:(0,r.jsxs)(n,{children:[(0,r.jsx)(i,{className:"padding-top--lg",style:{backgroundColor:"#87dfb8",color:"black"},children:(0,r.jsxs)("div",{className:"avatar avatar--vertical",children:[(0,r.jsx)("img",{className:"avatar__photo avatar__photo--xs",src:"https://avatars.githubusercontent.com/u/97809069?v=4"}),(0,r.jsxs)("div",{className:"avatar__intro",children:[(0,r.jsx)("div",{className:"avatar__name",children:"Docux (@Juniors017)"}),(0,r.jsx)("small",{className:"avatar__subtitle",children:(0,r.jsxs)(t.p,{children:["humble contributor on:\n",(0,r.jsx)("a",{href:"https://docusaurus.community/",style:{color:"#1a8870"},children:"@Doc.Community"})]})})]})]})}),(0,r.jsx)(c,{style:{backgroundColor:"#87dfb8",color:"black"},cardImageUrl:"https://img.freepik.com/vecteurs-libre/crocodile-mignon-jouant-illustration-icone-vecteur-dessin-anime-planche-roulettes-icone-sport-animal-isole-plat_138676-7352.jpg?size=626&ext=jpg&ga=GA1.1.1416347011.1716591654&semt=sph"}),(0,r.jsxs)(a,{style:{backgroundColor:"black",color:"silver"},className:"padding-vert--md",textAlign:"right",Transform:"uppercase",children:[(0,r.jsx)("h3",{children:"Docux Card component"}),(0,r.jsx)(t.p,{children:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\ntempor incididunt ut labore et dolore magna aliqua. Quis ipsum\nsuspendisse ultrices gravida."})]})]})})}),(0,r.jsx)("div",{className:"col col--4",children:(0,r.jsx)("div",{className:"",children:(0,r.jsxs)(n,{children:[(0,r.jsx)(i,{className:"padding-top--lg",style:{backgroundColor:"#7a9f3d",color:"black"},children:(0,r.jsxs)("div",{className:"avatar",children:[(0,r.jsx)("img",{className:"avatar__photo avatar__photo--lg",src:"https://avatars.githubusercontent.com/u/97809069?v=4"}),(0,r.jsxs)("div",{className:"avatar__intro",children:[(0,r.jsx)("div",{className:"avatar__name",children:"Docux (@Juniors017)"}),(0,r.jsx)("small",{className:"avatar__subtitle",children:(0,r.jsxs)(t.p,{children:["humble contributor on:\n",(0,r.jsx)("a",{style:{color:"white"},href:"https://docusaurus.community/",children:"@Doc.Community"})]})})]})]})}),(0,r.jsx)(c,{style:{backgroundColor:"#7a9f3d",color:"black"},cardImageUrl:"https://img.freepik.com/vecteurs-libre/dino-mignon-jouant-au-golf-cartoon-vector-icon-illustration-concept-icone-sport-animalier-isole-plat_138676-7100.jpg?size=626&ext=jpg&ga=GA1.1.1416347011.1716591654&semt=sph"}),(0,r.jsxs)(a,{style:{backgroundColor:"#d7de3d",color:"black"},className:"padding-vert--md",textAlign:"justify",Transform:"uppercase",children:[(0,r.jsx)("h3",{className:"text--center",children:"Docux Card component"}),(0,r.jsx)(t.p,{children:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\ntempor incididunt ut labore et dolore magna aliqua. Quis ipsum\nsuspendisse ultrices gravida."})]})]})})}),(0,r.jsx)("div",{className:"col col--4",children:(0,r.jsx)("div",{className:"",children:(0,r.jsxs)(n,{children:[(0,r.jsx)(i,{className:"padding-vert--md ",style:{backgroundColor:"#fff2c7",color:"black"},children:(0,r.jsx)("div",{className:"avatar avatar--vertical",children:(0,r.jsx)("img",{className:"avatar__photo avatar__photo--xl",src:"https://avatars.githubusercontent.com/u/97809069?v=4"})})}),(0,r.jsx)(c,{style:{backgroundColor:"black",color:"black"},cardImageUrl:"https://img.freepik.com/vecteurs-libre/mignon-dino-chef-tenue-spatule-dessin-anime-vecteur-icone-illustration-nourriture-animale-icone-concept-isole_138676-8913.jpg?size=626&ext=jpg&ga=GA1.1.1416347011.1716591654&semt=sph"}),(0,r.jsxs)(a,{style:{backgroundColor:"#40c43b",color:"black"},className:"padding-vert--md",textAlign:"center",Transform:"uppercase",children:[(0,r.jsx)("h3",{children:"Docux Card component"}),(0,r.jsx)(t.p,{children:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\ntempor incididunt ut labore et dolore magna aliqua. Quis ipsum\nsuspendisse ultrices gravida."})]})]})})})]})})]})}function m(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}function h(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>i});var a=n(6540);const r={},o=a.createContext(r);function s(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);